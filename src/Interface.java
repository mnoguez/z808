package src;

import java.io.FileNotFoundException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.EOFException;
import java.io.IOException;
import java.util.ArrayList;
/**
 *
 * @author douglas
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form IGz808
     */

    String[] code;
    public SeparadorDeCodigo sDC;
    public ProcessadorDeMacros pDM;
    public Montador mont;
    public Ligador lig;
    public Carregador car;

    public Interface() {
        super("Z808");
        initComponents();
        setLocationRelativeTo(null);
        areaCodigo.setLineWrap(true);
        areaCodigo.setWrapStyleWord(true);
        areaMem.setLineWrap(true);
        areaMem.setWrapStyleWord(true);
        lerTxt();
    }

    public void lerTxt(){
        String line = "";
        try{
            FileReader arq;
            arq = new FileReader("C:\\Users\\Luiza\\Desktop\\z808\\src\\testes\\teste1.txt");
            BufferedReader arq2 = new BufferedReader(arq);
            String codigo = "";
            try{
                codigo = arq2.readLine();
                while(codigo != null) {
                    line += codigo + "\n";
                    codigo = arq2.readLine();
                }
                areaCodigo.setText(line);
                arq.close();
            }catch (IOException ex){
                System.out.println("ERRO");
            }
        } catch (FileNotFoundException ex) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        areaCodigo = new javax.swing.JTextArea();
        runButton = new javax.swing.JButton();
        cleanButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Ax = new javax.swing.JLabel();
        Dx = new javax.swing.JLabel();
        axTextField = new javax.swing.JTextField();
        dxTextField = new javax.swing.JTextField();
        Si = new javax.swing.JLabel();
        Sr = new javax.swing.JLabel();
        Ip = new javax.swing.JLabel();
        siTextField = new javax.swing.JTextField();
        srTextField = new javax.swing.JTextField();
        ipTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaMem = new javax.swing.JTextArea();
        processaMacro = new javax.swing.JButton();
        montaCodigo = new javax.swing.JButton();
        ligaCodigo = new javax.swing.JButton();
        carregaCodigo = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        codigoProcessado = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        analisaCodigo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        areaCodigo.setColumns(20);
        areaCodigo.setRows(5);
        jScrollPane1.setViewportView(areaCodigo);

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        cleanButton.setText("Clean");
        cleanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Registradores");

        Ax.setText("AX");

        Dx.setText("DX");

        axTextField.setText("1");
        axTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                axTextFieldActionPerformed(evt);
            }
        });

        dxTextField.setText("4");
        dxTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dxTextFieldActionPerformed(evt);
            }
        });

        Si.setText("SI");

        Sr.setText("SR");

        Ip.setText("IP");

        siTextField.setText("3");
        siTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siTextFieldActionPerformed(evt);
            }
        });

        srTextField.setText("7");
        srTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srTextFieldActionPerformed(evt);
            }
        });

        ipTextField.setText("8");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Memória");

        areaMem.setColumns(20);
        areaMem.setRows(5);
        jScrollPane2.setViewportView(areaMem);

        processaMacro.setText("Processar Macro");
        processaMacro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processaMacroActionPerformed(evt);
            }
        });

        montaCodigo.setText("Montar");
        montaCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                montaCodigoActionPerformed(evt);
            }
        });

        ligaCodigo.setText("Ligar");
        ligaCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ligaCodigoActionPerformed(evt);
            }
        });

        carregaCodigo.setText("Carregar");
        carregaCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregaCodigoActionPerformed(evt);
            }
        });

        codigoProcessado.setColumns(20);
        codigoProcessado.setRows(5);
        jScrollPane4.setViewportView(codigoProcessado);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Código");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Código Processado");

        analisaCodigo.setText("Analisar");
        analisaCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analisaCodigoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(analisaCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(processaMacro, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(montaCodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ligaCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(carregaCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cleanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Ax)
                            .addComponent(Dx)
                            .addComponent(Si, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Sr)
                            .addComponent(Ip, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(siTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(srTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(115, 115, 115)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(axTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(172, 172, 172)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(axTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Ax))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Dx)
                                    .addComponent(dxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(siTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Si))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Sr)
                                    .addComponent(srTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Ip)
                                    .addComponent(ipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addComponent(jScrollPane4))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(runButton)
                            .addComponent(cleanButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(processaMacro)
                            .addComponent(montaCodigo)
                            .addComponent(ligaCodigo)
                            .addComponent(carregaCodigo)
                            .addComponent(analisaCodigo)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed

        System.exit(0);

    }//GEN-LAST:event_runButtonActionPerformed

    private void cleanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanButtonActionPerformed
        //Registradores zerados
        axTextField.setText("0");
        dxTextField.setText("0");
        siTextField.setText("0");
        srTextField.setText("0");
        ipTextField.setText("0");
        //Memoria zerada
        areaMem.setText("");
        //Area de código zerado
        areaCodigo.setText("");
        //Area de código processado zerado
        codigoProcessado.setText("");

    }//GEN-LAST:event_cleanButtonActionPerformed

    private void axTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_axTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_axTextFieldActionPerformed

    private void dxTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dxTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dxTextFieldActionPerformed

    private void siTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_siTextFieldActionPerformed

    private void srTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_srTextFieldActionPerformed

    private void processaMacroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processaMacroActionPerformed
        ArrayList<ArrayList<String>> macros = new ArrayList<ArrayList<String>>();
        macros.add(new ArrayList<String>());
        macros.get(0).add("SOMA");
        macros.get(0).add("MACRO");
        macros.get(0).add("AAUX");
        macros.get(0).add("BAUX");
        macros.get(0).add("CAUX");
        macros.add(new ArrayList<String>());
        macros.get(1).add("ADD");
        macros.get(1).add("AAUX");
        macros.get(1).add("BAUX");
        macros.add(new ArrayList<String>());
        macros.get(2).add("SUB");
        macros.get(2).add("CAUX");
        macros.get(2).add("AAUX");
        macros.add(new ArrayList<String>());
        macros.get(3).add("ENDM");
        macros.add(new ArrayList<String>());
        macros.get(4).add("LOUCURA");
        macros.get(4).add("MACRO");
        macros.get(4).add("UM");
        macros.get(4).add("DOIS");
        macros.get(4).add("TRES");
        macros.add(new ArrayList<String>());
        macros.get(5).add("ADD");
        macros.get(5).add("UM");
        macros.get(5).add("DOIS");
        macros.add(new ArrayList<String>());
        macros.get(6).add("SUB");
        macros.get(6).add("DOIS");
        macros.get(6).add("TRES");
        macros.add(new ArrayList<String>());
        macros.get(7).add("MUL");
        macros.get(7).add("DOIS");
        macros.get(7).add("UM");
        macros.add(new ArrayList<String>());
        macros.get(8).add("DIV");
        macros.get(8).add("DOIS");
        macros.get(8).add("TRES");
        macros.get(8).add("ENDM");

        macros.add(new ArrayList<String>());
        macros.get(9).add("DADOS");
        macros.get(9).add("SEGMENT");
        macros.add(new ArrayList<String>());
        macros.get(10).add("VAR1");
        macros.get(10).add("CMP");
        macros.get(10).add("8");
        macros.add(new ArrayList<String>());
        macros.get(11).add("VAR2");
        macros.get(11).add("CMP");
        macros.get(11).add("15");
        macros.add(new ArrayList<String>());
        macros.get(12).add("VAR3");
        macros.get(12).add("CMP");
        macros.get(12).add("18");
        macros.add(new ArrayList<String>());
        macros.get(13).add("DADOS");
        macros.get(13).add("ENDS");

        macros.add(new ArrayList<String>());
        macros.get(14).add("CODIGO");
        macros.get(14).add("SEGMENT");
        macros.add(new ArrayList<String>());
        macros.get(15).add("ADD");
        macros.get(15).add("TESTE");
        macros.get(15).add("DX");
        macros.add(new ArrayList<String>());
        macros.get(16).add("ADD");
        macros.get(16).add("TESTE");
        macros.get(16).add("SI");
        macros.add(new ArrayList<String>());
        macros.get(17).add("ADD");
        macros.get(17).add("AX");
        macros.get(17).add("DX");
        macros.add(new ArrayList<String>());
        macros.get(18).add("SOMA");
        macros.get(18).add("ABC");
        macros.get(18).add("DEF");
        macros.get(18).add("GHE");
        macros.add(new ArrayList<String>());
        macros.get(19).add("LOUCURA");
        macros.get(19).add("QUATRO");
        macros.get(19).add("CINCO");
        macros.get(19).add("SEIS");
        macros.add(new ArrayList<String>());
        macros.get(20).add("ADD");
        macros.get(20).add("AX");
        macros.get(20).add("DX");
        macros.add(new ArrayList<String>());
        macros.get(21).add("ADD");
        macros.get(21).add("AX");
        macros.get(21).add("DX");
        macros.add(new ArrayList<String>());
        macros.get(22).add("ADD");
        macros.get(22).add("AX");
        macros.get(22).add("DX");
        macros.add(new ArrayList<String>());
        macros.get(23).add("ADD");
        macros.get(23).add("AX");
        macros.get(23).add("DX");
        macros.add(new ArrayList<String>());
        macros.get(24).add("CODIGO");
        macros.get(24).add("ENDS");


        ArrayList<ArrayList<String>> codigoCompleto = new ArrayList<>();

        this.sDC = new SeparadorDeCodigo(macros);
        this.sDC.separaCodigoDados();
        this.sDC.SeparaCodigoMacros();
        this.sDC.separaCodigoExecutavel();

        this.pDM = new ProcessadorDeMacros(sDC.getCodigoMacros(),sDC.getCodigoExecutavel());
        ArrayList<ArrayList<String>> codigoExpandido = new ArrayList<>();
        codigoExpandido = this.pDM.ProcessaMacros();

        int i = 0;
        for(ArrayList<String> linha : macros){
            areaCodigo.append("Indice " + i + ": ");
            for(String comando : linha){
                areaCodigo.append(comando + " ");
            }
            areaCodigo.append("\n");
            i+=3;
        }

        i = 0;
        for(ArrayList<String> linha : codigoExpandido){
            codigoProcessado.append("Indice " + i + ": ");
            for(String comando : linha){
                codigoProcessado.append(comando + " ");
            }
            codigoProcessado.append("\n");
            i+=3;
        }

    }//GEN-LAST:event_processaMacroActionPerformed

    private void montaCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_montaCodigoActionPerformed
        Montador mCodigo = new Montador();
        ArrayList<ArrayList<String>> montarCodigo = new ArrayList<>();

    }//GEN-LAST:event_montaCodigoActionPerformed

    private void ligaCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ligaCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ligaCodigoActionPerformed

    private void carregaCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregaCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carregaCodigoActionPerformed

    private void analisaCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analisaCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_analisaCodigoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Ax;
    private javax.swing.JLabel Dx;
    private javax.swing.JLabel Ip;
    private javax.swing.JLabel Si;
    private javax.swing.JLabel Sr;
    private javax.swing.JButton analisaCodigo;
    private javax.swing.JTextArea areaCodigo;
    private javax.swing.JTextArea areaMem;
    private javax.swing.JTextField axTextField;
    private javax.swing.JButton carregaCodigo;
    private javax.swing.JButton cleanButton;
    private javax.swing.JTextArea codigoProcessado;
    private javax.swing.JTextField dxTextField;
    private javax.swing.JTextField ipTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton ligaCodigo;
    private javax.swing.JButton montaCodigo;
    private javax.swing.JButton processaMacro;
    private javax.swing.JButton runButton;
    private javax.swing.JTextField siTextField;
    private javax.swing.JTextField srTextField;
    // End of variables declaration//GEN-END:variables
}
